<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd" 
				>

<!-- 配置被代理的对象 -->
<bean id="test1Service" class="xyz.zzyymaggie.spring.aop.Test1Service">
<property name="name" value="HanMeimei" />
</bean>
<bean id="test2Service" class="xyz.zzyymaggie.spring.aop.Test2Service">
<property name="name" value="LiLei" />
</bean>
<bean id="MyMethodBeforeAdvice" class="xyz.zzyymaggie.spring.aop.MyMethodBeforeAdvice" /> 
<!-- 配置代理对象 -->
<bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
<!-- 代理接口集 -->
<property name="proxyInterfaces">
	<list>
		<value>xyz.zzyymaggie.spring.aop.TestServiceInter</value>
		<value>xyz.zzyymaggie.spring.aop.TestServiceInter2</value>
	</list>
</property>
<!-- 把通知织入到代理对象  -->
<property name="interceptorNames">
	<!-- 相当于包MyMethodBeforeAdvice前置通知和代理对象关联,我们也
	可以把通知看出拦截器,struts2核心拦截器 -->
	<value>MyMethodBeforeAdvice</value>
</property>
<!-- 配置被代理对象,可以指定 -->
<property name="target" ref="test1Service"/>
</bean>
</beans>